<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ProjectManagement.Domain</name>
    </assembly>
    <members>
        <member name="T:ProjectManagement.Domain.Analyst">
            <summary>
                Represents a Symbiotics Analyst employee
            </summary>
        </member>
        <member name="M:ProjectManagement.Domain.Analyst.#ctor">
            <summary>
                For OR/M usage
            </summary>
        </member>
        <member name="M:ProjectManagement.Domain.Analyst.#ctor(System.String,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="P:ProjectManagement.Domain.Analyst.Display">
            <inheritdoc />
        </member>
        <member name="P:ProjectManagement.Domain.Analyst.Acronym">
            <summary>
            The Acronym used for each Analyst
            </summary>
        </member>
        <member name="T:ProjectManagement.Domain.Consultant">
            <summary>
            Represents a Consultant hired for one or more Projects
            </summary>
        </member>
        <member name="M:ProjectManagement.Domain.Consultant.#ctor">
            <summary>
                For OR/M usage
            </summary>
        </member>
        <member name="M:ProjectManagement.Domain.Consultant.#ctor(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="P:ProjectManagement.Domain.Consultant.Display">
            <inheritdoc />
        </member>
        <member name="T:ProjectManagement.Domain.Core.IDomainEvent">
            <summary>
                An Event raised by one or more Domain Entities
            </summary>
        </member>
        <member name="T:ProjectManagement.Domain.Core.IEntity">
            <summary>
                Represent an Entity inside the Domain
            </summary>
        </member>
        <member name="P:ProjectManagement.Domain.Core.IEntity.Id">
            <summary>
                The Unique Identifier of the Entity
            </summary>
        </member>
        <member name="T:ProjectManagement.Domain.DonorAggregate">
            <inheritdoc />
            <summary>
                Represents a Donor which is in charge of disbursing money for one or more projects
            </summary>
        </member>
        <member name="M:ProjectManagement.Domain.DonorAggregate.#ctor">
            <summary>
                For OR/M usage
            </summary>
        </member>
        <member name="M:ProjectManagement.Domain.DonorAggregate.#ctor(System.String)">
            <summary>
                Private constructor used to initialize a new instance of the Entity
            </summary>
        </member>
        <member name="P:ProjectManagement.Domain.DonorAggregate.Name">
            <summary>
                The Unique Name of the Donor
            </summary>
        </member>
        <member name="P:ProjectManagement.Domain.DonorAggregate.Projects">
            <summary>
                The List of Projects funded by a Donor
            </summary>
        </member>
        <member name="P:ProjectManagement.Domain.DonorAggregate.Id">
            <inheritdoc />
            <summary>
                The Unique Id of the Donor
            </summary>
        </member>
        <member name="M:ProjectManagement.Domain.DonorAggregate.AssignProjectToDonor(ProjectManagement.Domain.ProjectAggregate)">
            <summary>
                Assign a Project to the related Donor
            </summary>
            <param name="project">The Project to be assigned</param>
        </member>
        <member name="M:ProjectManagement.Domain.Events.DomainEvents.Register``1(System.Action{``0})">
            <summary>
                Registers a callback for the given domain event
            </summary>
            <typeparam name="T"></typeparam>
            <param name="callback"></param>
        </member>
        <member name="M:ProjectManagement.Domain.Events.DomainEvents.ClearCallbacks">
            <summary>
                Clears callbacks passed to Register on the current thread
            </summary>
        </member>
        <member name="M:ProjectManagement.Domain.Events.DomainEvents.Raise``1(``0)">
            <summary>
                Raises the given domain event
            </summary>
            <typeparam name="T"></typeparam>
            <param name="args"></param>
        </member>
        <member name="T:ProjectManagement.Domain.Events.ProjectCreated">
            <summary>
                Raised when a new Project is created and initialized
            </summary>
        </member>
        <member name="P:ProjectManagement.Domain.Events.ProjectCreated.Project">
            <summary>
                The Newly created Project
            </summary>
        </member>
        <member name="T:ProjectManagement.Domain.Person">
            <summary>
                Represents a generic Person with a FirstName and a LastName
            </summary>
        </member>
        <member name="M:ProjectManagement.Domain.Person.#ctor">
            <summary>
                For OR/M usage
            </summary>
        </member>
        <member name="M:ProjectManagement.Domain.Person.#ctor(System.String,System.String)">
            <summary>
                Create and Initialize a new Person record
            </summary>
            <param name="firstName">The FirstName to be assigned</param>
            <param name="lastName">The LastName to be assigned</param>
        </member>
        <member name="P:ProjectManagement.Domain.Person.FirstName">
            <summary>
                The FirstName of the Person
            </summary>
        </member>
        <member name="P:ProjectManagement.Domain.Person.LastName">
            <summary>
                The LastName of the Person
            </summary>
        </member>
        <member name="P:ProjectManagement.Domain.Person.Id">
            <summary>
                The Unique Id of the Entity
            </summary>
        </member>
        <member name="P:ProjectManagement.Domain.Person.Display">
            <summary>
            The Display Name used to display an instance of a Person
            </summary>
            <remarks>Overridden by the child class</remarks>
        </member>
        <member name="T:ProjectManagement.Domain.ProjectAggregate">
            <inheritdoc cref="T:ProjectManagement.Domain.Core.IEntity" />
            <inheritdoc cref="T:ProjectManagement.Domain.Core.IDeletable" />
            <summary>
                Represents a Project Aggregate
            </summary>
        </member>
        <member name="M:ProjectManagement.Domain.ProjectAggregate.#ctor">
            <summary>
                For OR/M usage
            </summary>
        </member>
        <member name="M:ProjectManagement.Domain.ProjectAggregate.#ctor(ProjectManagement.Domain.DonorAggregate,ProjectManagement.Domain.Analyst,System.String,ProjectManagement.Domain.TypeOfProject,ProjectManagement.Domain.TypeOfTenderProcess,System.Nullable{System.DateTime})">
            <summary>
                Create a new Project Aggregate instance
            </summary>
            <param name="donor">The Donor which funded the Project</param>
            <param name="analyst">The Analyst associated to the Project</param>
            <param name="acronym">The Acronym of the Project</param>
            <param name="projectType">The Type of Project</param>
            <param name="tenderProcessType">The Tender Process applied to the Project</param>
            <param name="startDate">The estimated start date of the Project</param>
        </member>
        <member name="P:ProjectManagement.Domain.ProjectAggregate.TenderProcessType">
            <summary>
                The Type of Tender Process applied to the Project
            </summary>
        </member>
        <member name="P:ProjectManagement.Domain.ProjectAggregate.ExpectedStartDate">
            <summary>
                The Initial Start Date set to the project, also known as "Expected"
            </summary>
        </member>
        <member name="P:ProjectManagement.Domain.ProjectAggregate.Analyst">
            <summary>
                The Analyst responsible of the Project
            </summary>
        </member>
        <member name="P:ProjectManagement.Domain.ProjectAggregate.Donor">
            <summary>
                The Donor in charge of disbursing the amount required by the Project
            </summary>
        </member>
        <member name="P:ProjectManagement.Domain.ProjectAggregate.Acronym">
            <summary>
                The Acronym which represents a Project
            </summary>
        </member>
        <member name="P:ProjectManagement.Domain.ProjectAggregate.ProjectType">
            <summary>
                The Type of Project used to classify
            </summary>
        </member>
        <member name="P:ProjectManagement.Domain.ProjectAggregate.IsDeleted">
            <summary>
                Implementation of the Soft Delete contract
            </summary>
        </member>
        <member name="M:ProjectManagement.Domain.ProjectAggregate.SetDeleted">
            <summary>
                Soft delete the record
            </summary>
        </member>
        <member name="P:ProjectManagement.Domain.ProjectAggregate.Id">
            <inheritdoc />
            <summary>
                The Unique Id of the Project
            </summary>
        </member>
        <member name="P:ProjectManagement.Domain.ProjectAggregate.Status">
            <summary>
            The Current Status of the Project
            </summary>
        </member>
        <member name="P:ProjectManagement.Domain.ProjectAggregate.TierLevel">
            <summary>
            The Tier Level of the Project, related to the Total Asset of the PLI involved in the Project
            </summary>
        </member>
        <member name="T:ProjectManagement.Domain.TypeOfProject">
            <summary>
                Represents one of the possible Project's type
            </summary>
        </member>
        <member name="T:ProjectManagement.Domain.Status">
            <summary>
            Represents the current status of a Project
            </summary>
        </member>
        <member name="F:ProjectManagement.Domain.Status.InPreparation">
            <summary>
            When the Project is created in the Application
            </summary>
        </member>
        <member name="F:ProjectManagement.Domain.Status.InProgress">
            <summary>
            When TAFE started the discussion
            </summary>
        </member>
        <member name="F:ProjectManagement.Domain.Status.Approved">
            <summary>
            TAFC or TAF Manager have approved the Project
            </summary>
        </member>
        <member name="F:ProjectManagement.Domain.Status.OnGoing">
            <summary>
            Consultant has signed the contract
            </summary>
        </member>
        <member name="F:ProjectManagement.Domain.Status.Completed">
            <summary>
            The TA Project completed and got green light from TAFE
            </summary>
        </member>
        <member name="F:ProjectManagement.Domain.Status.Closed">
            <summary>
            The Consultant has been fully paid and PLI paid
            </summary>
        </member>
        <member name="T:ProjectManagement.Domain.TierLevel">
            <summary>
            Represents the Tier Level of a Project, assigned depending on the budget of the project
            </summary>
        </member>
        <member name="F:ProjectManagement.Domain.TierLevel.Tier1">
            <summary>
            If the Insitution size is over 30M
            </summary>
        </member>
        <member name="F:ProjectManagement.Domain.TierLevel.Tier2">
            <summary>
            If the Institution size is between 10M and 30M
            </summary>
        </member>
        <member name="F:ProjectManagement.Domain.TierLevel.Tier3">
            <summary>
            If the Institution size is less than 10M
            </summary>
        </member>
    </members>
</doc>
